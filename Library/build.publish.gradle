
//
// Below code was adapted from
// https://github.com/DeployGate/deploygate-android-sdk
//

apply plugin: 'signing'
apply plugin: 'maven'

boolean validProperty(propertyName) {
    try { project.property(propertyName) != null }
    catch (ignored) { false }
}
assert validProperty('signing.keyId'),             'properties for signing must be provided'
assert validProperty('signing.secretKeyRingFile'), 'properties for signing must be provided'
assert validProperty('sonatypeUsername'),          'properties for publish must be provided'
assert validProperty('sonatypeFullname'),          'properties for publish must be provided'

/*
//We're grabbing the passwords from gradle.properties instead
String askPassword(prompt) {
    "${System.console().readPassword(prompt)}"
}
ext.'signing.password' = askPassword("Enter password for PGP key ${property('signing.keyId')}: ")
ext.'sonatypePassword' = askPassword("Enter password for ${sonatypeUsername}@oss.sonatype.org: ")
*/

signing {
    sign configurations.archives
}

//Defines JavaDocs JavaDocs
task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java
}

//Compiles JavaDocs to Jar for maven
task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    //basename = artifact_id
    from androidJavadocs.destinationDir
}

//Compiles Sources to Jar for maven
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    //basename = artifact_id
    from android.sourceSets.main.java
}

// Adds the Source and Javadocs to Maven upload task
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

uploadArchives {
    repositories.mavenDeployer {

        repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
        /*
        snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
        }
        */
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        pom.groupId = 'com.myriadmobile.library'
        pom.artifactId = 'hopscotch'
        pom.version = '0.9.4'

        pom.project {
            name 'Hopscotch'
            packaging 'jar' // We upload an jar as the primary, as we are not defining any resources
            description 'A drop in replacement for Android\'s Path which implements Serializable and Parcelable'
            url 'https://github.com/myriadmobile/hopscotch'
            //You need to provide this for Central
            scm {
                url 'git@github.com:myriadmobile/hopscotch.git'
                connection 'scm:git:git@github.com:myriadmobile/hopscotch.git'
                developerConnection 'scm:git:git@github.com:myriadmobile/hopscotch.git'
            }
            //You need a license
            licenses {
                license {
                    name 'MIT License'
                    url 'http://www.opensource.org/licenses/mit-license.php'
                }
            }
            developers {
                //This developer is needed!
                developer {
                    id sonatypeUsername
                    name sonatypeFullname
                }
                //This one is extra
                developer {
                    name 'Adam Koski'
                    email 'akoski@myriadmobile.com'
                    organization 'Myriad Mobile'
                    organizationUrl 'http://www.myriadmobile.com'
                }
            }
        }
    }
}